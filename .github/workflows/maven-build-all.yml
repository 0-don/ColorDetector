# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build Every Installer

on:
  #  push:
  #    branches: [ main ]
  #  pull_request:
  #    branches: [ main ]
  workflow_dispatch:
    branches: [main]

# Note that the builds produced by this build WILL NOT RUN on macOS Monterey!
# They will be flagged as unsigned and quarantined. You can run a command-line
# to un-quarantine them, but obviously that's not practical for end-users.
# Instead, you will need to set up the signing and notarization to get this to work
# seamlessly for users. See the notes on signing linked to in the README.md
# in the root of this directory.

jobs:
  build-mac:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 18.0.2
          distribution: 'liberica'
          java-package: jdk+fx
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B clean install --file pom.xml
      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          name: macos
          path: ./target/*.dmg
      # - name: Update Automatic Release
      #   uses: marvinpinto/action-automatic-releases@latest
      #   with:
      #     repo_token: '${{ secrets.GITHUB_TOKEN}}'
      #     automatic_release_tag: 'macOS-latest'
      #     prerelease: true
      #     title: 'macOS Development Build'
      #     files: ./target/*.dmg
  build-unix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 18.0.2
          distribution: 'liberica'
          java-package: jdk+fx
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B clean install --file pom.xml
      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          name: unix
          path: ./target/*.deb
      # - name: Update Automatic Release
      #   uses: marvinpinto/action-automatic-releases@latest
      #   with:
      #     repo_token: '${{ secrets.GITHUB_TOKEN}}'
      #     automatic_release_tag: 'Ubuntu-latest'
      #     prerelease: true
      #     title: 'Ubuntu Development Build'
      #     files: ./target/*.deb
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Download Wix
        uses: i3h/download-release-asset@v1
        with:
          owner: wixtoolset
          repo: wix3
          tag: wix3112rtm
          file: wix311-binaries.zip
      - name: Decompress Wix
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: wix311-binaries.zip
          pathTarget: ./target/wix
      - name: Add Wix to Path
        run: echo "$HOME/target/wix" >> $GITHUB_PATH
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 18.0.2
          distribution: 'liberica'
          java-package: jdk+fx
          cache: 'maven'
      - name: Build with Maven
        run: mvn -B clean install --file pom.xml
      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          name: windows
          path: ./target/*.msi
      # - name: Update Automatic Release
      #   uses: marvinpinto/action-automatic-releases@latest
      #   with:
      #     repo_token: '${{ secrets.GITHUB_TOKEN}}'
      #     automatic_release_tag: 'Windows-latest'
      #     prerelease: true
      #     title: 'Windows Development Build'
      #     files: ./target/*.msi
  publish:
    runs-on: ubuntu-latest
    needs: [build-mac, build-unix, build-windows]
    steps:
      - name: Download Macos
        uses: actions/download-artifact@v3
        with:
          name: macos
          path: ./build
      - name: Download Unix
        uses: actions/download-artifact@v3
        with:
          name: unix
          path: ./build
      - name: Download Windows
        uses: actions/download-artifact@v3
        with:
          name: windows
          path: ./build
      - name: Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN}}'
          automatic_release_tag: 'All Builds'
          prerelease: true
          title: 'All Builds'
          files: ./build/*
